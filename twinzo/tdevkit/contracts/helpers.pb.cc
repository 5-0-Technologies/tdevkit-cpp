// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: helpers.proto

#include "helpers.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR DeviceContractList::DeviceContractList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.contracts_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeviceContractListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceContractListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceContractListDefaultTypeInternal() {}
  union {
    DeviceContractList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceContractListDefaultTypeInternal _DeviceContractList_default_instance_;
PROTOBUF_CONSTEXPR DeviceLocationContractList::DeviceLocationContractList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.contracts_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeviceLocationContractListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceLocationContractListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceLocationContractListDefaultTypeInternal() {}
  union {
    DeviceLocationContractList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceLocationContractListDefaultTypeInternal _DeviceLocationContractList_default_instance_;
PROTOBUF_CONSTEXPR LocationContractList::LocationContractList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.contracts_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LocationContractListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocationContractListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocationContractListDefaultTypeInternal() {}
  union {
    LocationContractList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocationContractListDefaultTypeInternal _LocationContractList_default_instance_;
PROTOBUF_CONSTEXPR DistanceContractList::DistanceContractList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.contracts_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DistanceContractListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DistanceContractListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DistanceContractListDefaultTypeInternal() {}
  union {
    DistanceContractList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DistanceContractListDefaultTypeInternal _DistanceContractList_default_instance_;
PROTOBUF_CONSTEXPR LayerContractList::LayerContractList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.contracts_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LayerContractListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LayerContractListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LayerContractListDefaultTypeInternal() {}
  union {
    LayerContractList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LayerContractListDefaultTypeInternal _LayerContractList_default_instance_;
PROTOBUF_CONSTEXPR AreaContractList::AreaContractList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.contracts_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AreaContractListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AreaContractListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AreaContractListDefaultTypeInternal() {}
  union {
    AreaContractList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AreaContractListDefaultTypeInternal _AreaContractList_default_instance_;
static ::_pb::Metadata file_level_metadata_helpers_2eproto[6];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_helpers_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_helpers_2eproto = nullptr;

const uint32_t TableStruct_helpers_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DeviceContractList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::DeviceContractList, _impl_.contracts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DeviceLocationContractList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::DeviceLocationContractList, _impl_.contracts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::LocationContractList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::LocationContractList, _impl_.contracts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DistanceContractList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::DistanceContractList, _impl_.contracts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::LayerContractList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::LayerContractList, _impl_.contracts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AreaContractList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::AreaContractList, _impl_.contracts_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::DeviceContractList)},
  { 7, -1, -1, sizeof(::DeviceLocationContractList)},
  { 14, -1, -1, sizeof(::LocationContractList)},
  { 21, -1, -1, sizeof(::DistanceContractList)},
  { 28, -1, -1, sizeof(::LayerContractList)},
  { 35, -1, -1, sizeof(::AreaContractList)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_DeviceContractList_default_instance_._instance,
  &::_DeviceLocationContractList_default_instance_._instance,
  &::_LocationContractList_default_instance_._instance,
  &::_DistanceContractList_default_instance_._instance,
  &::_LayerContractList_default_instance_._instance,
  &::_AreaContractList_default_instance_._instance,
};

const char descriptor_table_protodef_helpers_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rhelpers.proto\032\ncore.proto\"8\n\022DeviceCon"
  "tractList\022\"\n\tcontracts\030\001 \003(\0132\017.DeviceCon"
  "tract\"H\n\032DeviceLocationContractList\022*\n\tc"
  "ontracts\030\001 \003(\0132\027.DeviceLocationContract\""
  "<\n\024LocationContractList\022$\n\tcontracts\030\001 \003"
  "(\0132\021.LocationContract\"<\n\024DistanceContrac"
  "tList\022$\n\tcontracts\030\001 \003(\0132\021.DistanceContr"
  "act\"6\n\021LayerContractList\022!\n\tcontracts\030\001 "
  "\003(\0132\016.LayerContract\"4\n\020AreaContractList\022"
  " \n\tcontracts\030\001 \003(\0132\r.AreaContractb\006proto"
  "3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_helpers_2eproto_deps[1] = {
  &::descriptor_table_core_2eproto,
};
static ::_pbi::once_flag descriptor_table_helpers_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_helpers_2eproto = {
    false, false, 401, descriptor_table_protodef_helpers_2eproto,
    "helpers.proto",
    &descriptor_table_helpers_2eproto_once, descriptor_table_helpers_2eproto_deps, 1, 6,
    schemas, file_default_instances, TableStruct_helpers_2eproto::offsets,
    file_level_metadata_helpers_2eproto, file_level_enum_descriptors_helpers_2eproto,
    file_level_service_descriptors_helpers_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_helpers_2eproto_getter() {
  return &descriptor_table_helpers_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_helpers_2eproto(&descriptor_table_helpers_2eproto);

// ===================================================================

class DeviceContractList::_Internal {
 public:
};

void DeviceContractList::clear_contracts() {
  _impl_.contracts_.Clear();
}
DeviceContractList::DeviceContractList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:DeviceContractList)
}
DeviceContractList::DeviceContractList(const DeviceContractList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeviceContractList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.contracts_){from._impl_.contracts_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DeviceContractList)
}

inline void DeviceContractList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.contracts_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeviceContractList::~DeviceContractList() {
  // @@protoc_insertion_point(destructor:DeviceContractList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeviceContractList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.contracts_.~RepeatedPtrField();
}

void DeviceContractList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeviceContractList::Clear() {
// @@protoc_insertion_point(message_clear_start:DeviceContractList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contracts_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeviceContractList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .DeviceContract contracts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_contracts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeviceContractList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeviceContractList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DeviceContract contracts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_contracts_size()); i < n; i++) {
    const auto& repfield = this->_internal_contracts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeviceContractList)
  return target;
}

size_t DeviceContractList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeviceContractList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .DeviceContract contracts = 1;
  total_size += 1UL * this->_internal_contracts_size();
  for (const auto& msg : this->_impl_.contracts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeviceContractList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeviceContractList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeviceContractList::GetClassData() const { return &_class_data_; }


void DeviceContractList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeviceContractList*>(&to_msg);
  auto& from = static_cast<const DeviceContractList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DeviceContractList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.contracts_.MergeFrom(from._impl_.contracts_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceContractList::CopyFrom(const DeviceContractList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeviceContractList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceContractList::IsInitialized() const {
  return true;
}

void DeviceContractList::InternalSwap(DeviceContractList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.contracts_.InternalSwap(&other->_impl_.contracts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeviceContractList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_helpers_2eproto_getter, &descriptor_table_helpers_2eproto_once,
      file_level_metadata_helpers_2eproto[0]);
}

// ===================================================================

class DeviceLocationContractList::_Internal {
 public:
};

void DeviceLocationContractList::clear_contracts() {
  _impl_.contracts_.Clear();
}
DeviceLocationContractList::DeviceLocationContractList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:DeviceLocationContractList)
}
DeviceLocationContractList::DeviceLocationContractList(const DeviceLocationContractList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeviceLocationContractList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.contracts_){from._impl_.contracts_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DeviceLocationContractList)
}

inline void DeviceLocationContractList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.contracts_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeviceLocationContractList::~DeviceLocationContractList() {
  // @@protoc_insertion_point(destructor:DeviceLocationContractList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeviceLocationContractList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.contracts_.~RepeatedPtrField();
}

void DeviceLocationContractList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeviceLocationContractList::Clear() {
// @@protoc_insertion_point(message_clear_start:DeviceLocationContractList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contracts_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeviceLocationContractList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .DeviceLocationContract contracts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_contracts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeviceLocationContractList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeviceLocationContractList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DeviceLocationContract contracts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_contracts_size()); i < n; i++) {
    const auto& repfield = this->_internal_contracts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeviceLocationContractList)
  return target;
}

size_t DeviceLocationContractList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeviceLocationContractList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .DeviceLocationContract contracts = 1;
  total_size += 1UL * this->_internal_contracts_size();
  for (const auto& msg : this->_impl_.contracts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeviceLocationContractList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeviceLocationContractList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeviceLocationContractList::GetClassData() const { return &_class_data_; }


void DeviceLocationContractList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeviceLocationContractList*>(&to_msg);
  auto& from = static_cast<const DeviceLocationContractList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DeviceLocationContractList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.contracts_.MergeFrom(from._impl_.contracts_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceLocationContractList::CopyFrom(const DeviceLocationContractList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeviceLocationContractList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceLocationContractList::IsInitialized() const {
  return true;
}

void DeviceLocationContractList::InternalSwap(DeviceLocationContractList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.contracts_.InternalSwap(&other->_impl_.contracts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeviceLocationContractList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_helpers_2eproto_getter, &descriptor_table_helpers_2eproto_once,
      file_level_metadata_helpers_2eproto[1]);
}

// ===================================================================

class LocationContractList::_Internal {
 public:
};

void LocationContractList::clear_contracts() {
  _impl_.contracts_.Clear();
}
LocationContractList::LocationContractList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:LocationContractList)
}
LocationContractList::LocationContractList(const LocationContractList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LocationContractList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.contracts_){from._impl_.contracts_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:LocationContractList)
}

inline void LocationContractList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.contracts_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

LocationContractList::~LocationContractList() {
  // @@protoc_insertion_point(destructor:LocationContractList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LocationContractList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.contracts_.~RepeatedPtrField();
}

void LocationContractList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LocationContractList::Clear() {
// @@protoc_insertion_point(message_clear_start:LocationContractList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contracts_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocationContractList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .LocationContract contracts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_contracts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LocationContractList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:LocationContractList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .LocationContract contracts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_contracts_size()); i < n; i++) {
    const auto& repfield = this->_internal_contracts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LocationContractList)
  return target;
}

size_t LocationContractList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LocationContractList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .LocationContract contracts = 1;
  total_size += 1UL * this->_internal_contracts_size();
  for (const auto& msg : this->_impl_.contracts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LocationContractList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LocationContractList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LocationContractList::GetClassData() const { return &_class_data_; }


void LocationContractList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LocationContractList*>(&to_msg);
  auto& from = static_cast<const LocationContractList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:LocationContractList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.contracts_.MergeFrom(from._impl_.contracts_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LocationContractList::CopyFrom(const LocationContractList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LocationContractList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocationContractList::IsInitialized() const {
  return true;
}

void LocationContractList::InternalSwap(LocationContractList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.contracts_.InternalSwap(&other->_impl_.contracts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LocationContractList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_helpers_2eproto_getter, &descriptor_table_helpers_2eproto_once,
      file_level_metadata_helpers_2eproto[2]);
}

// ===================================================================

class DistanceContractList::_Internal {
 public:
};

void DistanceContractList::clear_contracts() {
  _impl_.contracts_.Clear();
}
DistanceContractList::DistanceContractList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:DistanceContractList)
}
DistanceContractList::DistanceContractList(const DistanceContractList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DistanceContractList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.contracts_){from._impl_.contracts_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DistanceContractList)
}

inline void DistanceContractList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.contracts_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DistanceContractList::~DistanceContractList() {
  // @@protoc_insertion_point(destructor:DistanceContractList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DistanceContractList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.contracts_.~RepeatedPtrField();
}

void DistanceContractList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DistanceContractList::Clear() {
// @@protoc_insertion_point(message_clear_start:DistanceContractList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contracts_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DistanceContractList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .DistanceContract contracts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_contracts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DistanceContractList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DistanceContractList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DistanceContract contracts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_contracts_size()); i < n; i++) {
    const auto& repfield = this->_internal_contracts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DistanceContractList)
  return target;
}

size_t DistanceContractList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DistanceContractList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .DistanceContract contracts = 1;
  total_size += 1UL * this->_internal_contracts_size();
  for (const auto& msg : this->_impl_.contracts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DistanceContractList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DistanceContractList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DistanceContractList::GetClassData() const { return &_class_data_; }


void DistanceContractList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DistanceContractList*>(&to_msg);
  auto& from = static_cast<const DistanceContractList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DistanceContractList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.contracts_.MergeFrom(from._impl_.contracts_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DistanceContractList::CopyFrom(const DistanceContractList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DistanceContractList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DistanceContractList::IsInitialized() const {
  return true;
}

void DistanceContractList::InternalSwap(DistanceContractList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.contracts_.InternalSwap(&other->_impl_.contracts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DistanceContractList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_helpers_2eproto_getter, &descriptor_table_helpers_2eproto_once,
      file_level_metadata_helpers_2eproto[3]);
}

// ===================================================================

class LayerContractList::_Internal {
 public:
};

void LayerContractList::clear_contracts() {
  _impl_.contracts_.Clear();
}
LayerContractList::LayerContractList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:LayerContractList)
}
LayerContractList::LayerContractList(const LayerContractList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LayerContractList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.contracts_){from._impl_.contracts_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:LayerContractList)
}

inline void LayerContractList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.contracts_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

LayerContractList::~LayerContractList() {
  // @@protoc_insertion_point(destructor:LayerContractList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LayerContractList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.contracts_.~RepeatedPtrField();
}

void LayerContractList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LayerContractList::Clear() {
// @@protoc_insertion_point(message_clear_start:LayerContractList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contracts_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LayerContractList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .LayerContract contracts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_contracts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LayerContractList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:LayerContractList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .LayerContract contracts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_contracts_size()); i < n; i++) {
    const auto& repfield = this->_internal_contracts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LayerContractList)
  return target;
}

size_t LayerContractList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LayerContractList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .LayerContract contracts = 1;
  total_size += 1UL * this->_internal_contracts_size();
  for (const auto& msg : this->_impl_.contracts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LayerContractList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LayerContractList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LayerContractList::GetClassData() const { return &_class_data_; }


void LayerContractList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LayerContractList*>(&to_msg);
  auto& from = static_cast<const LayerContractList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:LayerContractList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.contracts_.MergeFrom(from._impl_.contracts_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LayerContractList::CopyFrom(const LayerContractList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LayerContractList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LayerContractList::IsInitialized() const {
  return true;
}

void LayerContractList::InternalSwap(LayerContractList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.contracts_.InternalSwap(&other->_impl_.contracts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LayerContractList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_helpers_2eproto_getter, &descriptor_table_helpers_2eproto_once,
      file_level_metadata_helpers_2eproto[4]);
}

// ===================================================================

class AreaContractList::_Internal {
 public:
};

void AreaContractList::clear_contracts() {
  _impl_.contracts_.Clear();
}
AreaContractList::AreaContractList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:AreaContractList)
}
AreaContractList::AreaContractList(const AreaContractList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AreaContractList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.contracts_){from._impl_.contracts_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AreaContractList)
}

inline void AreaContractList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.contracts_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AreaContractList::~AreaContractList() {
  // @@protoc_insertion_point(destructor:AreaContractList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AreaContractList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.contracts_.~RepeatedPtrField();
}

void AreaContractList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AreaContractList::Clear() {
// @@protoc_insertion_point(message_clear_start:AreaContractList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contracts_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AreaContractList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .AreaContract contracts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_contracts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AreaContractList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AreaContractList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AreaContract contracts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_contracts_size()); i < n; i++) {
    const auto& repfield = this->_internal_contracts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AreaContractList)
  return target;
}

size_t AreaContractList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AreaContractList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AreaContract contracts = 1;
  total_size += 1UL * this->_internal_contracts_size();
  for (const auto& msg : this->_impl_.contracts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AreaContractList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AreaContractList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AreaContractList::GetClassData() const { return &_class_data_; }


void AreaContractList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AreaContractList*>(&to_msg);
  auto& from = static_cast<const AreaContractList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:AreaContractList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.contracts_.MergeFrom(from._impl_.contracts_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AreaContractList::CopyFrom(const AreaContractList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AreaContractList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AreaContractList::IsInitialized() const {
  return true;
}

void AreaContractList::InternalSwap(AreaContractList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.contracts_.InternalSwap(&other->_impl_.contracts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AreaContractList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_helpers_2eproto_getter, &descriptor_table_helpers_2eproto_once,
      file_level_metadata_helpers_2eproto[5]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::DeviceContractList*
Arena::CreateMaybeMessage< ::DeviceContractList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DeviceContractList >(arena);
}
template<> PROTOBUF_NOINLINE ::DeviceLocationContractList*
Arena::CreateMaybeMessage< ::DeviceLocationContractList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DeviceLocationContractList >(arena);
}
template<> PROTOBUF_NOINLINE ::LocationContractList*
Arena::CreateMaybeMessage< ::LocationContractList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::LocationContractList >(arena);
}
template<> PROTOBUF_NOINLINE ::DistanceContractList*
Arena::CreateMaybeMessage< ::DistanceContractList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DistanceContractList >(arena);
}
template<> PROTOBUF_NOINLINE ::LayerContractList*
Arena::CreateMaybeMessage< ::LayerContractList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::LayerContractList >(arena);
}
template<> PROTOBUF_NOINLINE ::AreaContractList*
Arena::CreateMaybeMessage< ::AreaContractList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AreaContractList >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
